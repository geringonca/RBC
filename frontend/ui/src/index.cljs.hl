
(page "index.html"
  (:require [app.rpc :as rpc])
  (:require [hl.fe-components :as fe])
)


;; Cells for each input example.
(defc ws-select "")
(defc nodule-select "___")

; (defc= workspaces (rpc/get-ws-from-env env-select))
; (defc check-box false)

(rpc/init)
(html
  (head
    ; (link :href "https://cdnjs.cloudflare.com/ajax/libs/bulma/0.6.1/css/bulma.min.css" :rel "stylesheet" :type "text/css")
    (link :href "https://unpkg.com/purecss@1.0.0/build/pure-min.css" :rel "stylesheet" :type "text/css")
    (link :rel "stylesheet" :href "https://unpkg.com/purecss-components@0.0.12/dist/pure-components.css" :integrity "sha384-3vxDvOU9lXU+bcgTkQNhnflfhRt/EFEGLtd3jQn8vQRGGQlpBX9VOq4oIufzLOO9" :crossorigin "anonymous")
    ; https://joe-crick.github.io/pure-css-components/#tabs
    (link :href "css/extra.css" :rel "stylesheet" :type "text/css")
    (title "Nodule Manager"))
  (body

    (div :id "layout" :class "content pure-g"
        (fe/rbc-nav)
        (fe/nodule-selector-list :nodulelist rpc/nodule-list :noduleselector nodule-select)
        (div :id "main" :class "pure-u-1"
            (div :class "email-content"
                (fe/nodule-header :nodulename nodule-select :noduleuid "xyz999" :envcount 2)
                ; (p (first rpc/nodule-list))
                ; (ul :class "pcssc-accordion accordion-tab"
                ;     (li :class "accordion-section"
                ;         (input :type "radio" :class "accordion-section-selector pcssc-invisible" :id "zero" :name "tab-head" :role "tab"
                ;                "checked")
                ;         (label :for "zero" :class "accordion-section-header" "Nodule")
                ;         (div :class "accordion-section-content"
                ;             (h2 "Nodule")
                ;             "???????????????????"
                ;         )
                ;
                ;     )
                ;     (li :class "accordion-section"
                ;         (input :type "radio" :class "accordion-section-selector pcssc-invisible" :id "one" :name "tab-head" :role "tab")
                ;         (label :for "one" :class "accordion-section-header" "Jobs")
                ;         (div :class "accordion-section-content"
                ;             (h2 "Jobs")
                ;             "???????????????????"
                ;         )
                ;
                ;     )
                ;     (li :class "accordion-section"
                ;         (input :type "radio" :class "accordion-section-selector pcssc-invisible" :id "two" :name "tab-head" :role "tab")
                ;         (label :for "two" :class "accordion-section-header" "Components")
                ;         (div :class "accordion-section-content"
                ;             (h2 "Components")
                ;             "???????????????????"
                ;         )
                ;     )
                ; )















                ; (div :class "email-content-body"
                ;     (h1 "Viewing Environment: " (b nodule-select))
                ;
                ;     ;    TODO REPLACE EXCLAIM W WS-MDLS
                ;     (form :submit #(rpc/do-exclaim @ws-select) ; edit and submit form to load record
                ;       (p (label "Workspace name: ")
                ;           (input :value ws-select :keyup #(reset! ws-select @%)))
                ;       (p (button :type "submit" "Search")))
                ;     (p (text "Workspaces: ~{rpc/stateE}"))
                ;
                ;             (table :class "pure-table pure-table-horizontal"
                ;                 (thead
                ;                     (tr
                ;                         (th "#")
                ;                         (th "Workspace Name")
                ;                         (th "Model Name")
                ;                         (th "Selected")))
                ;                 (tbody
                ;                     (for-tpl [x rpc/ws-list]
                ;                       (tr :class (if (> (rand-int 10) 5) "pure-table-odd" "")
                ;                           (td "1")
                ;                           (td x)
                ;                           (td "-")
                ;                           (td (input :type "checkbox" :click #(do (swap! check-box not) true) :value check-box))
                ;                           ))))
                ;
                ;       )
                      ))
                      )))
